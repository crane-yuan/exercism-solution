#!/usr/bin/env bash

set -o errexit

ord() {
  LC_CTYPE=C printf '%d' "'$1"
}

chr() {
  [ "$1" -lt 256 ] || return 1
  printf "\\$(printf '%03o' "$1")"
}

pad () {
  padding=$1

  x=1
  while [[ $x -le $padding ]]; do
    printf ' ' # pad the line
    ((x++))
  done
}

line_a () { # print the first or last line
  padding=$(( line_width / 2 ))
  pad $padding
  printf 'A'
  pad $padding
  printf "\n" # get a new line
}

up_to_max () {
  level=2 # set the level and two padding values
  int_padding=1 ext_padding=$(( line_width / 2 - 1 ))
  while [[ $level -le $max_level ]]; do
    num=$(( A_num + level - 1))
    letter=$(chr $num)
    pad $ext_padding # external
    printf "%s" "$letter"
    pad $int_padding # internal
    printf "%s" "$letter"
    pad $ext_padding # external
    printf "\n"
    ((level++)); ((ext_padding--))
    int_padding=$(( int_padding + 2 ))
  done
}

down_to_last () {
  level=$(( max_level - 1 )) # print the bottom of the diamond
  ext_padding=1 int_padding=$(( line_width - 4 ))
  while [[ $level -ge 2 ]]; do
    num=$(( A_num + level - 1))
    letter=$(chr $num)
    pad $ext_padding
    printf "%s" "$letter"
    pad $int_padding
    printf "%s" "$letter"
    pad $ext_padding
    printf "\n"
    ((level--)); ((ext_padding++))
    int_padding=$(( int_padding - 2 ))
  done
}

main() {
    func "$@"
}

func(){
    readonly arg="$*"
    [[ $arg == 'A' ]] && printf "%s\n" "A" && exit 0

    letter_num=$(ord $arg)
    readonly A_num=$(ord 'A')
    
    readonly max_level=$(( letter_num - A_num + 1 ))
    readonly line_width=$(( max_level * 2 - 1 ))

    line_a
    up_to_max
    down_to_last
    line_a
}

main "$@"
